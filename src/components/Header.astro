---
import SideBar from "../components/SideBar.astro";
---
     
<header class="bg-white shadow-lg">
    <div class="container mx-auto px-4 py-6 flex justify-between items-center">
        <div class="flex items-center">
            <button class="px-4" id="boton-menu-header">
                <svg width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-menu-2"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 6l16 0" /><path d="M4 12l16 0" /><path d="M4 18l16 0" /></svg>
            </button>
            <SideBar id="side-bar"></SideBar>
            <a href="/" class="text-xl font-bold text-gray-800">Recetas EH</a>
            <form id="buscador-form" class="ml-4">
                <input 
                  type="text" 
                  id="buscador" 
                  placeholder="Buscar recetas" 
                  class="border border-gray-300 rounded-md px-4 py-2 focus:outline-none focus:ring focus:ring-blue-200">
                <button 
                  type="submit" 
                  class="inline-block ml-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 focus:outline-none focus:bg-blue-600">
                  <svg class="inline" width="24px" height="24px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M15.7955 15.8111L21 21M18 10.5C18 14.6421 14.6421 18 10.5 18C6.35786 18 3 14.6421 3 10.5C3 6.35786 6.35786 3 10.5 3C14.6421 3 18 6.35786 18 10.5Z" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                  Buscar
                </button>
              </form>
        </div>
        <nav>
            <ul class="flex items-center space-x-4">
                <!-- Botón de usuario con dropdown -->
                <li class="relative">
                    <button 
                        id="usuario-dropdown" 
                        class="flex items-center text-gray-800 hover:text-blue-500 focus:outline-none">
                        <span id="usuario">Log in</span>
                        <svg class="ml-2 w-4 h-4" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M12 16L8 10H16L12 16Z" fill="currentColor"/>
                        </svg>
                    </button>
                    <!-- Menú desplegable -->
                    <div 
                        id="dropdown-menu" 
                        class="absolute right-0 mt-2 w-48 bg-white border border-gray-200 rounded-md shadow-lg hidden">
                        <a 
                            href="/favoritos"
                            class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Favoritos</a>
                        <button 
                            id="logout-btn" 
                            class="block w-full text-left px-4 py-2 text-gray-700 hover:bg-gray-100">Cerrar sesión</button>
                    </div>
                </li>
                <li><a href="about-us" class="text-gray-800 hover:text-blue-500">Acerca</a></li>
            </ul>
        </nav>        
    </div>
</header>
<script>
    //obtener el usuario que esta en el localstorage    
const userName = localStorage.getItem('usuario')
if(userName != null){
    document.getElementById("usuario").innerHTML = userName.slice(1,-1) 
}

document.getElementById("boton-menu-header").addEventListener("click", mostrar)

function mostrar(){
    document.getElementById("side-bar").style.display = "block"
}

document.addEventListener('DOMContentLoaded', () => {
        const dropdownButton = document.getElementById('usuario-dropdown');
        const dropdownMenu = document.getElementById('dropdown-menu');
        const logoutButton = document.getElementById('logout-btn');
        const usuarioText = document.getElementById('usuario');
        
        // Obtener el nombre de usuario del localStorage
        const userName = localStorage.getItem('usuario');
        
        if (userName) {
            // Si el usuario está autenticado, muestra su nombre y el dropdown
            usuarioText.textContent = userName.slice(1, -1); // Remueve las comillas
        } else {
            // Si no está autenticado, muestra "Log in" y redirige al login
            usuarioText.textContent = 'Log in';
            usuarioText.addEventListener('click', () => {
                window.location.href = '/log-in'; // Cambia por la URL de tu página de login
            });
        }

        // Mostrar/ocultar el menú al hacer clic en el botón (si está autenticado)
        if (userName) {
            dropdownButton.addEventListener('click', (e) => {
                e.preventDefault();
                dropdownMenu.classList.toggle('hidden');
            });

            // Cerrar el menú al hacer clic fuera de él
            document.addEventListener('click', (e) => {
                const target = e.target as Node; // Type Assertion
                if (!dropdownButton.contains(target) && !dropdownMenu.contains(target)) {
                    dropdownMenu.classList.add('hidden');
                }
            });

            // Acción de cerrar sesión
            logoutButton.addEventListener('click', () => {
                localStorage.removeItem('usuario'); // Elimina el usuario del localStorage
                window.location.href = '/'; // Redirige al inicio o página de login
            });
        }
    });


</script>